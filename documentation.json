[
  {
    "name": "UIExplorer",
    "comment": "\n\n[Component Explorers](https://blog.hichroma.com/the-crucial-tool-for-modern-frontend-engineers-fb849b06187a) and [Style Guides](http://styleguides.io/) have been around for a while now.\nWe don't build pages anymore but components that are assembled together to build systems.\n\nIn the ELM world, components are just called views, and are defined as pure functions.\nELM UI Explorer takes advantage of the composability and the purity of ELM and offers a way to showcase\nyour views and their states in a single tool.\n\nInspired by [React Storybook](https://storybook.js.org/)\n\n# UIExplorer\n@docs app\n@docs renderStories\n\n# Models\n\n@docs UI\n@docs UICategory\n\n# Utils\n@docs addUICategory\n@docs emptyUICategories\n@docs createUI\n@docs createUIWithDescription\n@docs fromUIList\n\n",
    "aliases": [],
    "types": [
      {
        "name": "UI",
        "comment": " A UI represents a view and lists a set of stories\n",
        "args": [],
        "cases": []
      },
      {
        "name": "UICategory",
        "comment": " Represents a familly of related views.\nFor example using [Atomic Design](http://bradfrost.com/blog/post/atomic-web-design/), we can have the following categories : Atoms, Molecules etc..\n",
        "args": [],
        "cases": []
      }
    ],
    "values": [
      {
        "name": "addUICategory",
        "comment": "\n   Add Category to a list of categories\n",
        "type": "String -> List UIExplorer.UI -> List UIExplorer.UICategory -> List UIExplorer.UICategory"
      },
      {
        "name": "app",
        "comment": " Launches a UIExplorer Applicaton given a list of categories\nUICategoryType ( title, categories )\n",
        "type": "List UIExplorer.UICategory -> Platform.Program Basics.Never UIExplorer.Model UIExplorer.Msg"
      },
      {
        "name": "createUI",
        "comment": "\n   Create a Ui\n",
        "type": "String -> (UIExplorer.UIViewConfig -> Html.Html UIExplorer.Msg) -> UIExplorer.UI"
      },
      {
        "name": "createUIWithDescription",
        "comment": "\n   Create a Ui with description\n",
        "type": "String -> String -> (UIExplorer.UIViewConfig -> Html.Html UIExplorer.Msg) -> UIExplorer.UI"
      },
      {
        "name": "emptyUICategories",
        "comment": "\n   Create empty list of categories\n",
        "type": "List UIExplorer.UICategory"
      },
      {
        "name": "fromUIList",
        "comment": "\n   Create UICategories from a list of UI\n   Add them in a Default Category\n",
        "type": "List UIExplorer.UI -> List UIExplorer.UICategory"
      },
      {
        "name": "renderStories",
        "comment": " Renders Stories of a given UI.\nA story represents a state of a view such as (Loading, Error, Success, NoNetwork ...)\n",
        "type": "(a -> Html.Html msg) -> List ( String, a ) -> UIExplorer.UIViewConfig -> Html.Html UIExplorer.Msg"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]